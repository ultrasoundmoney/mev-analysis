{
  "db": "PostgreSQL",
  "02a6ff6e2f997a5a57b5b35c416a45ce7917d4110a4a17bf24c637c7338ed9dd": {
    "describe": {
      "columns": [
        {
          "name": "builder_pubkey",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "builder_name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "uncensored_blocks",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "total_blocks",
          "ordinal": 3,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                builder_pubkey,\n                builder_name,\n                uncensored_blocks,\n                total_blocks\n            FROM\n                builder_blocks_30d\n            "
  },
  "02dc1734de68f766241196b5a33bc99cefb4379e1a9b4a099ea705b30e7bfbe0": {
    "describe": {
      "columns": [
        {
          "name": "pubkey",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "builder_name",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "TextArray"
        ]
      }
    },
    "query": "\n        SELECT\n            pubkey,\n            builder_name\n        FROM\n            builder_pubkeys\n        WHERE\n            pubkey = ANY($1)\n        "
  },
  "0cfa774a2cce1f084fa5cff3d3ee5631dbec2198bdb23b8eab7ab0d5f68e586f": {
    "describe": {
      "columns": [
        {
          "name": "slot_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT slot_number\n            FROM block_production\n            ORDER BY slot_number ASC\n            LIMIT 1\n            "
  },
  "1621984623036a1f8fc5be4f23153f975a134660297e4ec48c3f828d85ea4cfa": {
    "describe": {
      "columns": [
        {
          "name": "transaction_hash",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "mined",
          "ordinal": 1,
          "type_info": "Timestamptz"
        },
        {
          "name": "delay",
          "ordinal": 2,
          "type_info": "Float8"
        },
        {
          "name": "block_number",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "block_delay",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "blacklist",
          "ordinal": 5,
          "type_info": "TextArray"
        },
        {
          "name": "reason",
          "ordinal": 6,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        null,
        false,
        false,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Interval"
        ]
      }
    },
    "query": "SELECT\n   *\nFROM\n   (\n      SELECT\n         transactions_data.transaction_hash,\n         transactions_data.mined,\n         transactions_data.delay::float,\n         transactions_data.block_number,\n         transactions_data.blocksdelay as block_delay,\n         CASE\n            WHEN blacklist = '{NULL}' THEN '{}'::text[]\n            ELSE blacklist\n         END AS blacklist,\n         CASE\n            WHEN transactions_data.low_balance = 1 THEN 'likely_insufficient_balance'\n            WHEN transactions_data.lowbasefee = 1 THEN 'lowbasefee'\n            WHEN transactions_data.lowtip = 1 THEN 'lowtip'\n            WHEN transactions_data.congested = 1 THEN 'congested'\n            WHEN transactions_data.blacklist != '{NULL}' THEN 'ofac'\n            ELSE 'unknown'\n         END AS reason\n      FROM\n         transactions_data\n      WHERE\n         transactions_data.mined > (CURRENT_DATE - $1::interval)\n         AND transactions_data.blocksdelay > 1\n   ) sq\nWHERE\n   reason = 'ofac'\n   OR reason = 'unknown'\n"
  },
  "18ea2228ecb0e48afe3ba2abdaa352bb8af24d3ebda29ffbae56fa5f97426479": {
    "describe": {
      "columns": [
        {
          "name": "censored_tx_count",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "censored_avg_delay",
          "ordinal": 1,
          "type_info": "Float8"
        },
        {
          "name": "uncensored_tx_count",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "uncensored_avg_delay",
          "ordinal": 3,
          "type_info": "Float8"
        }
      ],
      "nullable": [
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                COALESCE(censored_tx_count, 0) AS censored_tx_count,\n                COALESCE(censored_avg_delay, 0) AS censored_avg_delay,\n                COALESCE(uncensored_tx_count, 0) AS uncensored_tx_count,\n                COALESCE(uncensored_avg_delay, 0) AS uncensored_avg_delay\n            FROM\n                censorship_delay_7d\n            "
  },
  "2f1fb67525b8bf6dc46897f153f4784a247d5575336d37dab6c9ece41b6effc7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int8",
          "Varchar",
          "Varchar",
          "Varchar",
          "TextArray",
          "Numeric"
        ]
      }
    },
    "query": "\n                INSERT INTO block_production (slot_number, block_number, block_hash, builder_pubkey, proposer_pubkey, relays, value)\n                VALUES ($1, $2, $3, $4, $5, $6, $7)\n                ON CONFLICT (slot_number, block_number, block_hash)\n                DO UPDATE SET\n                  relays = ARRAY (SELECT DISTINCT UNNEST(block_production.relays || $6)),\n                  value = $7\n                "
  },
  "3b46131f6339a8f8f12f3bfc6e4e2a511f86c45a2ec6b38495cb3cb046b616e1": {
    "describe": {
      "columns": [
        {
          "name": "timestamp",
          "ordinal": 0,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "\n        SELECT timestamp\n        FROM monitor_checkpoints\n        WHERE monitor_id = $1\n        LIMIT 1\n        "
  },
  "42a5b7e42b58c30dd938249b7deed8ce306ab50c376ddc94a50c221249785709": {
    "describe": {
      "columns": [
        {
          "name": "relay_id",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "total_blocks",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "uncensored_blocks",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                relay_id,\n                total_blocks,\n                uncensored_blocks\n            FROM\n                relay_censorship_7d\n            "
  },
  "4edb1b52690629a38cb7d5030f4fd98267a2af5496e2a03ac63535a715f8e7b0": {
    "describe": {
      "columns": [
        {
          "name": "transaction_hash",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "mined",
          "ordinal": 1,
          "type_info": "Timestamptz"
        },
        {
          "name": "delay",
          "ordinal": 2,
          "type_info": "Float8"
        },
        {
          "name": "block_number",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "block_delay",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "blacklist",
          "ordinal": 5,
          "type_info": "TextArray"
        },
        {
          "name": "reason",
          "ordinal": 6,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        null,
        false,
        false,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int8"
        ]
      }
    },
    "query": "SELECT\n  transactions_data.transaction_hash,\n  transactions_data.mined,\n  transactions_data.delay::float,\n  transactions_data.block_number,\n  transactions_data.blocksdelay as block_delay,\n  CASE\n    WHEN blacklist = '{NULL}' THEN '{}'::text[]\n    ELSE blacklist\n  END AS blacklist,\n  CASE\n    WHEN transactions_data.low_balance = 1 THEN 'likely_insufficient_balance'\n    WHEN transactions_data.lowbasefee = 1 THEN 'lowbasefee'\n    WHEN transactions_data.lowtip = 1 THEN 'lowtip'\n    WHEN transactions_data.congested = 1 THEN 'congested'\n    WHEN transactions_data.blacklist != '{NULL}' THEN 'ofac'\n    ELSE 'unknown'\n  END AS reason\n  FROM\n    transactions_data\n WHERE\n   transactions_data.mined > (CURRENT_DATE - $1::interval)\n   AND transactions_data.blocksdelay > 1\n ORDER BY\n   transactions_data.mined DESC\n LIMIT $2\n"
  },
  "4fe072ed2dc31c6239efa122c1f9087e50d4e76499f52d4f79befe04fd80317e": {
    "describe": {
      "columns": [
        {
          "name": "builder_id",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "censoring_pubkeys",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "total_pubkeys",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "block_count",
          "ordinal": 3,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                bid as builder_id,\n                COALESCE(censoring_pubkeys, 0) AS censoring_pubkeys,\n                COALESCE(total_pubkeys, 0) AS total_pubkeys,\n                COALESCE(number_of_blocks, 0) AS block_count\n            FROM\n                builders_7d\n            "
  },
  "567c4f271b33e91b4fd31cca7057c03aed3fc1c1b91b21090e4d17f1c2cc6b56": {
    "describe": {
      "columns": [
        {
          "name": "timestamp",
          "ordinal": 0,
          "type_info": "Timestamptz"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT timestamp FROM blocks ORDER BY timestamp DESC LIMIT 1"
  },
  "57e76c5f66376b4f6afed09b85f259ff0111a950e9da769b5804f91129246705": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Timestamptz"
        ]
      }
    },
    "query": "\n        INSERT INTO monitor_checkpoints (monitor_id, timestamp)\n        VALUES ($1, $2)\n        ON CONFLICT (monitor_id) DO UPDATE SET timestamp = $2\n        "
  },
  "60c76c079e46f42a1cfbe737ea246d56d1bb3984470677da3cbe3260e2a29d7c": {
    "describe": {
      "columns": [
        {
          "name": "relay_id",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "block_count",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "total_value",
          "ordinal": 2,
          "type_info": "Float8"
        },
        {
          "name": "avg_value",
          "ordinal": 3,
          "type_info": "Float8"
        }
      ],
      "nullable": [
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Interval"
        ]
      }
    },
    "query": "\n            SELECT\n                UNNEST(relays) AS relay_id,\n                COUNT(*) AS block_count,\n                SUM(value / array_length(relays, 1)) / 10^18 AS total_value,\n                AVG(value / array_length(relays, 1)) / 10^18 AS avg_value\n            FROM\n                block_production\n            WHERE\n                inserted_at >= NOW() - $1::interval\n            GROUP BY\n                relay_id\n            "
  },
  "6f2ba37d7de520fbbbea680170556ffee644e58264a09f768c5feba34f8a7577": {
    "describe": {
      "columns": [
        {
          "name": "relay_id",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "total_blocks",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "uncensored_blocks",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                relay_id,\n                total_blocks,\n                uncensored_blocks\n            FROM\n                relay_censorship_30d\n\n            "
  },
  "83992c141a7a1b6de48753c971d88915a117b585bcfed0425e7ae1fdcb456a28": {
    "describe": {
      "columns": [
        {
          "name": "censored_tx_count",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "censored_avg_delay",
          "ordinal": 1,
          "type_info": "Float8"
        },
        {
          "name": "uncensored_tx_count",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "uncensored_avg_delay",
          "ordinal": 3,
          "type_info": "Float8"
        }
      ],
      "nullable": [
        null,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                COALESCE(censored_tx_count, 0) AS censored_tx_count,\n                COALESCE(censored_avg_delay, 0) AS censored_avg_delay,\n                COALESCE(uncensored_tx_count, 0) AS uncensored_tx_count,\n                COALESCE(uncensored_avg_delay, 0) AS uncensored_avg_delay\n            FROM\n                censorship_delay_30d\n            "
  },
  "8b70af619d8edd7797abcbf57e6105b60cd9f74fb87c4a68ce7e33b7a1eaf01c": {
    "describe": {
      "columns": [
        {
          "name": "operator_id",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "validator_count",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "relays",
          "ordinal": 2,
          "type_info": "TextArray"
        }
      ],
      "nullable": [
        true,
        true,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n        SELECT\n            operator_id,\n            validator_count,\n            relays\n        FROM\n            operators_all\n        "
  },
  "9c0d78883385fc3abb9112bb7aaa75badbada1b3374bfaa7fecb877e541bd089": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Varchar",
          "Varchar"
        ]
      }
    },
    "query": "\n        INSERT INTO missed_slots (slot_number, relayed_block_hash, canonical_block_hash)\n        VALUES ($1, $2, $3)\n        "
  },
  "a81f8d6a22e778ca9006989860792c87ed3851d22dfb2438e4a7169331d6fab8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE transactions_data\n                SET low_balance = $1\n                WHERE transaction_hash = $2\n                "
  },
  "a875ca754e6eb830a0e407caf166dc9d5917fe2ea3600ede1781d891a2fef169": {
    "describe": {
      "columns": [
        {
          "name": "transaction_hash",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "block_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "mined",
          "ordinal": 2,
          "type_info": "Timestamptz"
        },
        {
          "name": "delay",
          "ordinal": 3,
          "type_info": "Float8"
        },
        {
          "name": "blacklist",
          "ordinal": 4,
          "type_info": "TextArray"
        },
        {
          "name": "block_delay",
          "ordinal": 5,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        null,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval"
        ]
      }
    },
    "query": "SELECT\n  transactions_data.transaction_hash,\n  transactions_data.block_number,\n  transactions_data.mined,\n  transactions_data.delay::float,\n  transactions_data.blacklist,\n  transactions_data.blocksdelay as block_delay\n  FROM\n    transactions_data\n WHERE\n   (\n     transactions_data.lowbasefee + transactions_data.lowtip + transactions_data.congested + transactions_data.low_balance\n   )\n   = 0\n   AND transactions_data.blocksdelay > 0\n   AND transactions_data.blacklist != '{NULL}'\n   AND transactions_data.mined > (CURRENT_DATE - $1::interval)\n"
  },
  "afea0d23aaf492036a9bee18e9655317920f36146ae3f66e7d4855992a57e698": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "WITH inserted_rows as (\nINSERT INTO\n   transactions_data\n   SELECT\n      \"NEST2\".transaction_hash,\n      min(\"NEST2\".tbn) AS blocknumber,\n      min(\"NEST2\".minertx) AS minertransaction,\n      max(\"NEST2\".lowbasefee) AS lowbasefee,\n      max(\"NEST2\".congestion) AS congested,\n      CASE\n         WHEN\n            count(DISTINCT \"NEST2\".block_number) > 0\n            AND max(\"NEST2\".lowbasefee) < 1\n         THEN\n            max(\"NEST2\".lowfeetip)\n         ELSE\n            0\n      END\n      AS lowtip, min(\"NEST2\".blockts) AS mined, max(\"NEST2\".delay) AS delay, array_agg(DISTINCT \"NEST2\".blacklist) AS blacklist, count(DISTINCT \"NEST2\".block_number) AS blocksdelay\n   FROM\n      (\n         SELECT\n            \"NEST\".minertx,\n            \"NEST\".tbn,\n            \"NEST\".blockts,\n            \"NEST\".prevts,\n            \"NEST\".transaction_hash,\n            blocks.block_number,\n            CASE\n               WHEN\n                  \"NEST\".bf < blocks.base_fee_per_gas\n               THEN\n                  1\n               ELSE\n                  0\n            END\n            AS lowbasefee,\n            CASE\n               WHEN\n                  (\n                     \"NEST\".bf - blocks.base_fee_per_gas\n                  )\n                  >= 1000000000 AND \"NEST\".pf>=1000000000 and tt=2\n               THEN\n                  0\n            WHEN\n                    (\n                     \"NEST\".bf - blocks.base_fee_per_gas\n                  )\n                  >= 1000000000 AND tt=0\n                  THEN 0\n               ELSE\n                  1\n            END\n            AS lowfeetip, blocks.gas_limit AS gaslimit, blocks.gas_used AS gasused, \"NEST\".gas,\n            CASE\n               WHEN\n                  \"NEST\".gas > (blocks.gas_limit - blocks.gas_used)\n               THEN\n                  1\n               ELSE\n                  0\n            END\n            AS congestion, \"NEST\".delay, \"NEST\".blacklist,\n            9 as low_balance\n         FROM\n            (\n               SELECT\n                  transactions.transaction_hash,\n                  min(transactions.block_number) AS tbn,\n                  CASE\n                     WHEN\n                        min(transactions.max_fee_per_gas) IS NOT NULL\n                     THEN\n                        min(transactions.max_fee_per_gas)\n                     ELSE\n                        min(transactions.gas_price)\n                  END\n                  AS bf,\n                  min(transactions.max_priority_fee_per_gas) as pf,\n                  min (transactions.transaction_type) as tt,\n                   min(transactions.gas) AS gas, min(blocks_1.\"timestamp\") AS blockts, min(mempool_timestamps.\"timestamp\") AS memts,\n                  CASE\n                     WHEN\n                        (\n                           min(extract(epoch\n                        FROM\n                           blocks_1.\"timestamp\")) - ((\n                           SELECT\n                              percentile_cont(0.5) WITHIN GROUP (\n                           ORDER BY\n(mempool_timestamps.timestamp_unix)) AS percentile_cont))\n                        )\n                        <= 0\n                     THEN\n                        0\n                     ELSE\n                        min(extract(epoch\n               FROM\n                  blocks_1.\"timestamp\")) - greatest(extract(epoch\n               FROM\n                  min(transactions.prev_nonce_timestamp)),\n                  (\n(\n                     SELECT\n                        percentile_cont(0.5) WITHIN GROUP (\n                     ORDER BY\n(mempool_timestamps.timestamp_unix)) AS percentile_cont)\n                  )\n)\n                  END\n                  AS delay,\n                  CASE\n                     WHEN\n                        (\n                           min(extract(epoch\n                        FROM\n                           blocks_1.\"timestamp\")) - ((\n                           SELECT\n                              percentile_cont(0.5) WITHIN GROUP (\n                           ORDER BY\n(mempool_timestamps.timestamp_unix)) AS percentile_cont))\n                        )\n                        <= 0\n                     THEN\n                        1\n                     ELSE\n                        0\n                  END\n                  AS minertx, min(blocks_1.block_number) AS bn, max(transaction_blacklists.blacklist_id) AS blacklist, min(transactions.prev_nonce_timestamp) AS prevts\n               FROM\n                  transactions\n                  LEFT JOIN\n                     blocks blocks_1\n                     ON blocks_1.block_number = transactions.block_number\n                  LEFT JOIN\n                     (\n                        SELECT\n                           \"NEST2_1\".transaction_hash,\n                           min(\"NEST2_1\".blacklist_id) AS blacklist_id\n                        FROM\n                           (\n                              SELECT\n                                 \"NEST_1\".transaction_hash,\n                                 \"NEST_1\".trace,\n                                 blacklist_entries.display_name,\n                                 blacklist_entries.blacklist_id\n                              FROM\n                                 (\n                                    SELECT\n                                       transactions_1.transaction_hash,\n                                       unnest(transactions_1.address_trace) AS trace,\n                                       transactions_1.block_timestamp\n                                    FROM\n                                       transactions transactions_1\n                                 )\n                                 \"NEST_1\"\n                                 LEFT JOIN\n                                    blacklist_entries\n                                    ON blacklist_entries.address = \"NEST_1\".trace\n                              WHERE\n                                 (\n                                    \"NEST_1\".trace IN\n                                    (\n                                       SELECT\n                                          blacklist_entries_1.address\n                                       FROM\n                                          blacklist_entries blacklist_entries_1\n                                    )\n                                 )\n                                 AND \"NEST_1\".block_timestamp > blacklist_entries.date_added\n                           )\n                           \"NEST2_1\"\n                        GROUP BY\n                           \"NEST2_1\".transaction_hash\n                     )\n                     transaction_blacklists\n                     ON transaction_blacklists.transaction_hash = transactions.transaction_hash\n                  INNER JOIN\n                     mempool_timestamps\n                     ON mempool_timestamps.transaction_hash = transactions.transaction_hash\n               WHERE\n                  transactions.block_timestamp > (\n                  SELECT\n                     GREATEST('2020-01-01', MAX(transactions_data.mined))\n                  from\n                     transactions_data)\n                  GROUP BY\n                     transactions.transaction_hash,\n                     blocks_1.gas_limit,\n                     blocks_1.gas_used\n            )\n            \"NEST\"\n            LEFT JOIN\n               blocks\n               ON blocks.\"timestamp\" > GREATEST (\"NEST\".memts, \"NEST\".prevts)\n               AND blocks.\"timestamp\" < \"NEST\".blockts\n      )\n      \"NEST2\"\n   GROUP BY\n      \"NEST2\".transaction_hash\n   ON CONFLICT (transaction_hash) DO NOTHING\n   RETURNING 1\n)\n\nSELECT COUNT(*) FROM inserted_rows;\n"
  },
  "b4b951edd34f5c90e9dfce62e1aa2872dc9effbfbab4c18ced24a2da2c79303f": {
    "describe": {
      "columns": [
        {
          "name": "delay_type",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "avg_delay",
          "ordinal": 1,
          "type_info": "Float8"
        },
        {
          "name": "avg_block_delay",
          "ordinal": 2,
          "type_info": "Float8"
        },
        {
          "name": "tx_count",
          "ordinal": 3,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        null,
        null,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                t_type AS delay_type,\n                avg_delay::float,\n                avg_block_delay::float,\n                n AS tx_count\n            FROM inclusion_delay_30d\n            "
  },
  "b5cc8291238aa73eeecd4cff45538eac2a6b324ca30a3aa189fa448fe23060de": {
    "describe": {
      "columns": [
        {
          "name": "delay_type",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "avg_delay",
          "ordinal": 1,
          "type_info": "Float8"
        },
        {
          "name": "avg_block_delay",
          "ordinal": 2,
          "type_info": "Float8"
        },
        {
          "name": "tx_count",
          "ordinal": 3,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        null,
        null,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                t_type AS delay_type,\n                avg_delay::float,\n                avg_block_delay::float,\n                n AS tx_count\n            FROM inclusion_delay_7d\n            "
  },
  "c84abce611c428b46cb09a33a0cbc2fa83abddd5f5bf1f7c7d60650f45c1ff1b": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "SELECT COUNT(*) FROM missed_slots WHERE slot_number > $1 AND slot_number <= $2"
  },
  "d4b5b444c5ab41863031f44991fede1deba00ee9824a61d1f581f7a3faf4855a": {
    "describe": {
      "columns": [
        {
          "name": "slot_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Timestamptz"
        ]
      }
    },
    "query": "\n        SELECT slot_number\n        FROM missed_slots\n        WHERE inserted_at > $1\n        "
  },
  "df8ad42619e4bd31754b0f76e37a0bb2a01e3b0002549c3cd6c19bd5086e2e33": {
    "describe": {
      "columns": [
        {
          "name": "transaction_hash",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "from_address",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "total_value",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "block_number",
          "ordinal": 3,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        null,
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                tx.transaction_hash,\n                tx.from_address,\n                (tx.value + tx.receipt_effective_gas_price * tx.receipt_gas_used)::text AS total_value,\n                tx.block_number - txd.blocksdelay AS block_number\n            FROM\n                transactions_data txd\n            INNER JOIN\n                transactions tx\n                ON tx.transaction_hash = txd.transaction_hash\n            WHERE\n                txd.blocksdelay > 2\n                AND minertransaction + lowbasefee + congested + lowtip = 0\n                AND low_balance = 9\n            "
  },
  "e36963367ad97d3cca55b306281fc25569d33b705814c343f5883fbea25c9923": {
    "describe": {
      "columns": [
        {
          "name": "builder_id",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "censoring_pubkeys",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "total_pubkeys",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "block_count",
          "ordinal": 3,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        null,
        null,
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                bid as builder_id,\n                COALESCE(censoring_pubkeys, 0) AS censoring_pubkeys,\n                COALESCE(total_pubkeys, 0) AS total_pubkeys,\n                COALESCE(number_of_blocks, 0) AS block_count\n            FROM\n                builders_30d\n            "
  },
  "f6e651aecad08bfbee7c36cd19b65f0b970450c9527302e16549f0b6ac5f8b43": {
    "describe": {
      "columns": [
        {
          "name": "slot_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "block_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "block_hash",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "builder_pubkey",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "proposer_pubkey",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "relays",
          "ordinal": 5,
          "type_info": "TextArray"
        },
        {
          "name": "value",
          "ordinal": 6,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        true,
        true,
        null
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n        SELECT\n            slot_number,\n            block_number,\n            block_hash,\n            builder_pubkey,\n            proposer_pubkey,\n            relays,\n            value::text\n        FROM block_production\n        WHERE\n           slot_number >= $1\n           AND slot_number <= $2\n        ORDER BY slot_number ASC\n        LIMIT 200\n        "
  },
  "fe8f4a6223cc2347eb5a1275ad0d4bf5dc79c18b9551371627879f034169a4a8": {
    "describe": {
      "columns": [
        {
          "name": "builder_pubkey",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "builder_name",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "uncensored_blocks",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "total_blocks",
          "ordinal": 3,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n            SELECT\n                builder_pubkey,\n                builder_name,\n                uncensored_blocks,\n                total_blocks\n            FROM\n                builder_blocks_7d\n            "
  }
}